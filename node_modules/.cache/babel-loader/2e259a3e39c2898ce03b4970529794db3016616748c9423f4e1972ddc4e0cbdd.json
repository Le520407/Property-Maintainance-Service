{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Le520\\\\Documents\\\\Property-Maintainance-Service\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { api, apiUtils } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // 检查token和用户信息\n    const token = apiUtils.getToken();\n    const savedUser = localStorage.getItem('user');\n    if (token && apiUtils.isTokenValid(token) && savedUser) {\n      setUser(JSON.parse(savedUser));\n    } else if (token && !apiUtils.isTokenValid(token)) {\n      // Token过期，清除本地数据\n      apiUtils.removeToken();\n      localStorage.removeItem('user');\n    }\n    setLoading(false);\n  }, []);\n  const login = async (email, password) => {\n    try {\n      const response = await api.auth.login({\n        email,\n        password\n      });\n\n      // 保存token\n      apiUtils.setToken(response.token);\n\n      // 转换用户数据格式以匹配前端期望\n      const userData = {\n        id: response.user._id || response.user.id,\n        name: response.user.fullName,\n        firstName: response.user.firstName,\n        lastName: response.user.lastName,\n        email: response.user.email,\n        role: response.user.role,\n        status: response.user.status,\n        avatar: response.user.avatar,\n        phone: response.user.phone,\n        address: response.user.address || '',\n        city: response.user.city || '',\n        state: response.user.state || '',\n        zipCode: response.user.zipCode || '',\n        country: response.user.country || 'Malaysia',\n        wallet: {\n          balance: response.user.totalSpent || 0,\n          currency: 'SGD'\n        },\n        referralCode: `SF${String(response.user._id || response.user.id).slice(0, 8).toUpperCase()}`,\n        referralCount: 0,\n        referralEarnings: 0,\n        // 管理员特定数据\n        ...(response.user.role === 'admin' && {\n          permissions: response.user.permissions || [],\n          isSuper: response.user.isSuper || false\n        }),\n        // 技术员/供应商特定数据\n        ...(['technician', 'vendor'].includes(response.user.role) && {\n          skills: response.user.skills || [],\n          experience: response.user.experience || 0,\n          hourlyRate: response.user.hourlyRate || 0,\n          rating: response.user.rating || 0,\n          totalReviews: response.user.totalReviews || 0,\n          completedJobs: response.user.completedJobs || 0,\n          subscriptionPlan: response.user.subscriptionPlan || 'basic'\n        }),\n        // 客户特定数据\n        ...(response.user.role === 'customer' && {\n          totalSpent: response.user.totalSpent || 0,\n          totalBookings: response.user.totalBookings || 0\n        })\n      };\n      setUser(userData);\n      localStorage.setItem('user', JSON.stringify(userData));\n      return {\n        success: true,\n        user: userData\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: apiUtils.handleError(error)\n      };\n    }\n  };\n  const register = async userData => {\n    try {\n      const response = await api.auth.register({\n        firstName: userData.name.split(' ')[0],\n        lastName: userData.name.split(' ').slice(1).join(' ') || '',\n        email: userData.email,\n        phone: userData.phone,\n        password: userData.password,\n        role: 'customer',\n        address: userData.address,\n        country: 'Malaysia'\n      });\n\n      // 保存token\n      apiUtils.setToken(response.token);\n\n      // 转换用户数据格式\n      const userDataFormatted = {\n        id: response.user._id || response.user.id,\n        name: response.user.fullName,\n        email: response.user.email,\n        role: response.user.role,\n        avatar: null,\n        phone: userData.phone,\n        address: userData.address,\n        wallet: {\n          balance: 0.00,\n          currency: 'SGD'\n        },\n        referralCode: `SF${String(response.user._id || response.user.id).slice(0, 8).toUpperCase()}`,\n        referralCount: 0,\n        referralEarnings: 0.00\n      };\n      setUser(userDataFormatted);\n      localStorage.setItem('user', JSON.stringify(userDataFormatted));\n      return {\n        success: true,\n        user: userDataFormatted\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: apiUtils.handleError(error)\n      };\n    }\n  };\n  const vendorRegister = async vendorData => {\n    try {\n      const response = await api.auth.registerTechnician({\n        firstName: vendorData.name.split(' ')[0],\n        lastName: vendorData.name.split(' ').slice(1).join(' ') || '',\n        email: vendorData.email,\n        phone: vendorData.phone,\n        password: vendorData.password,\n        city: vendorData.address,\n        country: 'Singapore',\n        skills: vendorData.services || [],\n        experience: vendorData.experience || 0,\n        hourlyRate: vendorData.hourlyRate || 0\n      });\n\n      // 保存token\n      apiUtils.setToken(response.token);\n\n      // 转换技术员数据格式\n      const vendorDataFormatted = {\n        id: response.user._id || response.user.id,\n        name: response.user.fullName,\n        email: response.user.email,\n        role: 'technician',\n        avatar: null,\n        phone: vendorData.phone,\n        address: vendorData.address,\n        services: vendorData.services || [],\n        experience: vendorData.experience || 0,\n        status: response.user.status,\n        rating: 0,\n        totalJobs: 0,\n        earnings: 0.00,\n        wallet: {\n          balance: 0.00,\n          currency: 'SGD'\n        },\n        skills: response.user.skills || [],\n        hourlyRate: response.user.hourlyRate || 0\n      };\n      return {\n        success: true,\n        vendor: vendorDataFormatted\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: apiUtils.handleError(error)\n      };\n    }\n  };\n  const logout = async () => {\n    try {\n      // 调用后端登出API\n      await api.auth.logout();\n    } catch (error) {\n      console.error('Logout API error:', error);\n    } finally {\n      // 清除本地数据\n      setUser(null);\n      apiUtils.removeToken();\n      localStorage.removeItem('user');\n    }\n  };\n  const updateUser = updatedData => {\n    const updatedUser = {\n      ...user,\n      ...updatedData\n    };\n    setUser(updatedUser);\n    localStorage.setItem('user', JSON.stringify(updatedUser));\n  };\n  const value = {\n    user,\n    loading,\n    login,\n    register,\n    vendorRegister,\n    logout,\n    updateUser\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 214,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","api","apiUtils","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","token","getToken","savedUser","localStorage","getItem","isTokenValid","JSON","parse","removeToken","removeItem","login","email","password","response","auth","setToken","userData","id","_id","name","fullName","firstName","lastName","role","status","avatar","phone","address","city","state","zipCode","country","wallet","balance","totalSpent","currency","referralCode","String","slice","toUpperCase","referralCount","referralEarnings","permissions","isSuper","includes","skills","experience","hourlyRate","rating","totalReviews","completedJobs","subscriptionPlan","totalBookings","setItem","stringify","success","error","handleError","register","split","join","userDataFormatted","vendorRegister","vendorData","registerTechnician","services","vendorDataFormatted","totalJobs","earnings","vendor","logout","console","updateUser","updatedData","updatedUser","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Le520/Documents/Property-Maintainance-Service/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { api, apiUtils } from '../services/api';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // 检查token和用户信息\r\n    const token = apiUtils.getToken();\r\n    const savedUser = localStorage.getItem('user');\r\n    \r\n    if (token && apiUtils.isTokenValid(token) && savedUser) {\r\n      setUser(JSON.parse(savedUser));\r\n    } else if (token && !apiUtils.isTokenValid(token)) {\r\n      // Token过期，清除本地数据\r\n      apiUtils.removeToken();\r\n      localStorage.removeItem('user');\r\n    }\r\n    \r\n    setLoading(false);\r\n  }, []);\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      const response = await api.auth.login({ email, password });\r\n      \r\n      // 保存token\r\n      apiUtils.setToken(response.token);\r\n      \r\n      // 转换用户数据格式以匹配前端期望\r\n      const userData = {\r\n        id: response.user._id || response.user.id,\r\n        name: response.user.fullName,\r\n        firstName: response.user.firstName,\r\n        lastName: response.user.lastName,\r\n        email: response.user.email,\r\n        role: response.user.role,\r\n        status: response.user.status,\r\n        avatar: response.user.avatar,\r\n        phone: response.user.phone,\r\n        address: response.user.address || '',\r\n        city: response.user.city || '',\r\n        state: response.user.state || '',\r\n        zipCode: response.user.zipCode || '',\r\n        country: response.user.country || 'Malaysia',\r\n        wallet: {\r\n          balance: response.user.totalSpent || 0,\r\n          currency: 'SGD'\r\n        },\r\n        referralCode: `SF${String(response.user._id || response.user.id).slice(0, 8).toUpperCase()}`,\r\n        referralCount: 0,\r\n        referralEarnings: 0,\r\n        // 管理员特定数据\r\n        ...(response.user.role === 'admin' && {\r\n          permissions: response.user.permissions || [],\r\n          isSuper: response.user.isSuper || false\r\n        }),\r\n        // 技术员/供应商特定数据\r\n        ...((['technician', 'vendor'].includes(response.user.role)) && {\r\n          skills: response.user.skills || [],\r\n          experience: response.user.experience || 0,\r\n          hourlyRate: response.user.hourlyRate || 0,\r\n          rating: response.user.rating || 0,\r\n          totalReviews: response.user.totalReviews || 0,\r\n          completedJobs: response.user.completedJobs || 0,\r\n          subscriptionPlan: response.user.subscriptionPlan || 'basic'\r\n        }),\r\n        // 客户特定数据\r\n        ...(response.user.role === 'customer' && {\r\n          totalSpent: response.user.totalSpent || 0,\r\n          totalBookings: response.user.totalBookings || 0\r\n        })\r\n      };\r\n\r\n      setUser(userData);\r\n      localStorage.setItem('user', JSON.stringify(userData));\r\n      return { success: true, user: userData };\r\n    } catch (error) {\r\n      return { success: false, error: apiUtils.handleError(error) };\r\n    }\r\n  };\r\n\r\n  const register = async (userData) => {\r\n    try {\r\n      const response = await api.auth.register({\r\n        firstName: userData.name.split(' ')[0],\r\n        lastName: userData.name.split(' ').slice(1).join(' ') || '',\r\n        email: userData.email,\r\n        phone: userData.phone,\r\n        password: userData.password,\r\n        role: 'customer',\r\n        address: userData.address,\r\n        country: 'Malaysia'\r\n      });\r\n      \r\n      // 保存token\r\n      apiUtils.setToken(response.token);\r\n      \r\n      // 转换用户数据格式\r\n      const userDataFormatted = {\r\n        id: response.user._id || response.user.id,\r\n        name: response.user.fullName,\r\n        email: response.user.email,\r\n        role: response.user.role,\r\n        avatar: null,\r\n        phone: userData.phone,\r\n        address: userData.address,\r\n        wallet: {\r\n          balance: 0.00,\r\n          currency: 'SGD'\r\n        },\r\n        referralCode: `SF${String(response.user._id || response.user.id).slice(0, 8).toUpperCase()}`,\r\n        referralCount: 0,\r\n        referralEarnings: 0.00\r\n      };\r\n\r\n      setUser(userDataFormatted);\r\n      localStorage.setItem('user', JSON.stringify(userDataFormatted));\r\n      return { success: true, user: userDataFormatted };\r\n    } catch (error) {\r\n      return { success: false, error: apiUtils.handleError(error) };\r\n    }\r\n  };\r\n\r\n  const vendorRegister = async (vendorData) => {\r\n    try {\r\n      const response = await api.auth.registerTechnician({\r\n        firstName: vendorData.name.split(' ')[0],\r\n        lastName: vendorData.name.split(' ').slice(1).join(' ') || '',\r\n        email: vendorData.email,\r\n        phone: vendorData.phone,\r\n        password: vendorData.password,\r\n        city: vendorData.address,\r\n        country: 'Singapore',\r\n        skills: vendorData.services || [],\r\n        experience: vendorData.experience || 0,\r\n        hourlyRate: vendorData.hourlyRate || 0\r\n      });\r\n      \r\n      // 保存token\r\n      apiUtils.setToken(response.token);\r\n      \r\n      // 转换技术员数据格式\r\n      const vendorDataFormatted = {\r\n        id: response.user._id || response.user.id,\r\n        name: response.user.fullName,\r\n        email: response.user.email,\r\n        role: 'technician',\r\n        avatar: null,\r\n        phone: vendorData.phone,\r\n        address: vendorData.address,\r\n        services: vendorData.services || [],\r\n        experience: vendorData.experience || 0,\r\n        status: response.user.status,\r\n        rating: 0,\r\n        totalJobs: 0,\r\n        earnings: 0.00,\r\n        wallet: {\r\n          balance: 0.00,\r\n          currency: 'SGD'\r\n        },\r\n        skills: response.user.skills || [],\r\n        hourlyRate: response.user.hourlyRate || 0\r\n      };\r\n\r\n      return { success: true, vendor: vendorDataFormatted };\r\n    } catch (error) {\r\n      return { success: false, error: apiUtils.handleError(error) };\r\n    }\r\n  };\r\n\r\n  const logout = async () => {\r\n    try {\r\n      // 调用后端登出API\r\n      await api.auth.logout();\r\n    } catch (error) {\r\n      console.error('Logout API error:', error);\r\n    } finally {\r\n      // 清除本地数据\r\n      setUser(null);\r\n      apiUtils.removeToken();\r\n      localStorage.removeItem('user');\r\n    }\r\n  };\r\n\r\n  const updateUser = (updatedData) => {\r\n    const updatedUser = { ...user, ...updatedData };\r\n    setUser(updatedUser);\r\n    localStorage.setItem('user', JSON.stringify(updatedUser));\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    loading,\r\n    login,\r\n    register,\r\n    vendorRegister,\r\n    logout,\r\n    updateUser\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}